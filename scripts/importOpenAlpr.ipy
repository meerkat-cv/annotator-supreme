import requests
import json
from requests_toolbelt import MultipartEncoder
import re 
import sys
import cv2

_annotator_url = 'http://192.168.1.43/annotator-supreme'
_dataset_name = 'OpenAlpr'
_image_category = "cars"

def create_dataset(dataset_name):
    global _dataset_name
    _dataset_name = dataset_name
    r = requests.post(_annotator_url+'/dataset/create', 
                      json={'name': _dataset_name,
                            'tags':[ 'alpr']})
    return(r)


def insert_image(image_name,image_path,category):
    m = MultipartEncoder(
        fields={'image': ('filename', open(image_path, 'rb')),
                'category': category, 
                'name': image_name}
    )
    r = requests.post(_annotator_url+"/image/"+_dataset_name+"/add",
                      data=m, 
                      headers={'Content-Type': m.content_type}  )
    return(r)


def insert_annotation(image_id,annotation_json):
    r = requests.post(_annotator_url+'/image/anno/'+_dataset_name+'/'+image_id,
                      json=annotation_json)
    return r


if __name__ == '__main__':

    images = ! ls *.png *.jpg

    # matches license plates AAA-DDDD
    plate = re.compile('.*([a-zA-Z][a-zA-Z][a-zA-Z][-]*\d\d\d\d).*',re.IGNORECASE)

    counter = 0;
    
    r = create_dataset(dataset_name+"_"+str(counter))
    print(r.text)
    
    for img_path in images:
        counter += 1;
        if ! ( counter % 1000) :
            r = create_dataset(dataset_name+"_"+str(counter // 1000))
            print(r.text)

        labelList = [ label.replace("-","") for label in plate.findall(img_path) ]
        
        print( labelList )

        #add the image 
        r = insert_image(img_path,img_path,"alpr")
        print(r.text)
        image_id = r.json()['imageId']

        #adds annotations to image just inserted
        image = cv2.imread(images[1])
        (h,w,_ ) = image.shape

        annotList = [ { 'top': 0 , 
                        'left': 0,  
                        'right': int(w),
                        'bottom': int(h),
                        'labels': labelList, 
                        'ignore':  False }
                      for d in boxList ]  

        annotation_json = { 'anno' : annotList} 
        
        r = insert_annotation(image_id,annotation_json)
        
        print(image_name,": ",r.status_code)
